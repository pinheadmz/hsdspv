# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := bcrypto
DEFS_Debug := \
	'-DNODE_GYP_MODULE_NAME=bcrypto' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DTORSION_USE_64BIT' \
	'-DTORSION_USE_ASM' \
	'-DTORSION_USE_OPENSSL' \
	'-DBCRYPTO_USE_SECP256K1' \
	'-DUSE_ENDOMORPHISM' \
	'-DENABLE_MODULE_ECDH' \
	'-DENABLE_MODULE_ELLIGATOR' \
	'-DENABLE_MODULE_EXTRA' \
	'-DENABLE_MODULE_RECOVERY' \
	'-DENABLE_MODULE_SCHNORRLEG' \
	'-DHAVE___INT128' \
	'-DUSE_ASM_X86_64' \
	'-DUSE_FIELD_5X52' \
	'-DUSE_FIELD_5X52_INT128' \
	'-DUSE_SCALAR_4X64' \
	'-DUSE_NUM_NONE' \
	'-DUSE_FIELD_INV_BUILTIN' \
	'-DUSE_SCALAR_INV_BUILTIN' \
	'-DBUILDING_NODE_EXTENSION' \
	'-DDEBUG' \
	'-D_DEBUG' \
	'-DV8_ENABLE_CHECKS'

# Flags passed to all source files.
CFLAGS_Debug := \
	-O0 \
	-gdwarf-2 \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Debug := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Debug := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Debug :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Debug :=

INCS_Debug := \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/include/node \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/src \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/openssl/config \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/openssl/openssl/include \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/uv/include \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/zlib \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/v8/include \
	-I$(srcdir)/../nan \
	-I$(srcdir)/src/torsion/include

DEFS_Release := \
	'-DNODE_GYP_MODULE_NAME=bcrypto' \
	'-DUSING_UV_SHARED=1' \
	'-DUSING_V8_SHARED=1' \
	'-DV8_DEPRECATION_WARNINGS=1' \
	'-DV8_DEPRECATION_WARNINGS' \
	'-DV8_IMMINENT_DEPRECATION_WARNINGS' \
	'-D_DARWIN_USE_64_BIT_INODE=1' \
	'-D_LARGEFILE_SOURCE' \
	'-D_FILE_OFFSET_BITS=64' \
	'-DOPENSSL_NO_PINSHARED' \
	'-DOPENSSL_THREADS' \
	'-DTORSION_USE_64BIT' \
	'-DTORSION_USE_ASM' \
	'-DTORSION_USE_OPENSSL' \
	'-DBCRYPTO_USE_SECP256K1' \
	'-DUSE_ENDOMORPHISM' \
	'-DENABLE_MODULE_ECDH' \
	'-DENABLE_MODULE_ELLIGATOR' \
	'-DENABLE_MODULE_EXTRA' \
	'-DENABLE_MODULE_RECOVERY' \
	'-DENABLE_MODULE_SCHNORRLEG' \
	'-DHAVE___INT128' \
	'-DUSE_ASM_X86_64' \
	'-DUSE_FIELD_5X52' \
	'-DUSE_FIELD_5X52_INT128' \
	'-DUSE_SCALAR_4X64' \
	'-DUSE_NUM_NONE' \
	'-DUSE_FIELD_INV_BUILTIN' \
	'-DUSE_SCALAR_INV_BUILTIN' \
	'-DBUILDING_NODE_EXTENSION'

# Flags passed to all source files.
CFLAGS_Release := \
	-Os \
	-gdwarf-2 \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-Wall \
	-Wendif-labels \
	-W \
	-Wno-unused-parameter

# Flags passed to only C files.
CFLAGS_C_Release := \
	-fno-strict-aliasing

# Flags passed to only C++ files.
CFLAGS_CC_Release := \
	-std=gnu++1y \
	-stdlib=libc++ \
	-fno-rtti \
	-fno-exceptions \
	-fno-strict-aliasing

# Flags passed to only ObjC files.
CFLAGS_OBJC_Release :=

# Flags passed to only ObjC++ files.
CFLAGS_OBJCC_Release :=

INCS_Release := \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/include/node \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/src \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/openssl/config \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/openssl/openssl/include \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/uv/include \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/zlib \
	-I/Users/matthewzipkin/Library/Caches/node-gyp/12.13.0/deps/v8/include \
	-I$(srcdir)/../nan \
	-I$(srcdir)/src/torsion/include

OBJS := \
	$(obj).target/$(TARGET)/src/base58/base58.o \
	$(obj).target/$(TARGET)/src/bech32/bech32.o \
	$(obj).target/$(TARGET)/src/cash32/cash32.o \
	$(obj).target/$(TARGET)/src/murmur3/murmur3.o \
	$(obj).target/$(TARGET)/src/torsion/src/aead.o \
	$(obj).target/$(TARGET)/src/torsion/src/chacha20.o \
	$(obj).target/$(TARGET)/src/torsion/src/drbg.o \
	$(obj).target/$(TARGET)/src/torsion/src/dsa.o \
	$(obj).target/$(TARGET)/src/torsion/src/ecc.o \
	$(obj).target/$(TARGET)/src/torsion/src/hash.o \
	$(obj).target/$(TARGET)/src/torsion/src/kdf.o \
	$(obj).target/$(TARGET)/src/torsion/src/poly1305.o \
	$(obj).target/$(TARGET)/src/torsion/src/rsa.o \
	$(obj).target/$(TARGET)/src/torsion/src/salsa20.o \
	$(obj).target/$(TARGET)/src/torsion/src/siphash.o \
	$(obj).target/$(TARGET)/src/torsion/src/util.o \
	$(obj).target/$(TARGET)/src/aead.o \
	$(obj).target/$(TARGET)/src/base58.o \
	$(obj).target/$(TARGET)/src/bech32.o \
	$(obj).target/$(TARGET)/src/bcrypto.o \
	$(obj).target/$(TARGET)/src/blake2b.o \
	$(obj).target/$(TARGET)/src/blake2s.o \
	$(obj).target/$(TARGET)/src/cash32.o \
	$(obj).target/$(TARGET)/src/chacha20.o \
	$(obj).target/$(TARGET)/src/dsa.o \
	$(obj).target/$(TARGET)/src/dsa_async.o \
	$(obj).target/$(TARGET)/src/ecdh.o \
	$(obj).target/$(TARGET)/src/ecdsa.o \
	$(obj).target/$(TARGET)/src/eddsa.o \
	$(obj).target/$(TARGET)/src/hash.o \
	$(obj).target/$(TARGET)/src/hmac.o \
	$(obj).target/$(TARGET)/src/keccak.o \
	$(obj).target/$(TARGET)/src/murmur3.o \
	$(obj).target/$(TARGET)/src/pbkdf2.o \
	$(obj).target/$(TARGET)/src/pbkdf2_async.o \
	$(obj).target/$(TARGET)/src/poly1305.o \
	$(obj).target/$(TARGET)/src/rsa.o \
	$(obj).target/$(TARGET)/src/rsa_async.o \
	$(obj).target/$(TARGET)/src/salsa20.o \
	$(obj).target/$(TARGET)/src/schnorr.o \
	$(obj).target/$(TARGET)/src/scrypt.o \
	$(obj).target/$(TARGET)/src/scrypt_async.o \
	$(obj).target/$(TARGET)/src/siphash.o \
	$(obj).target/$(TARGET)/src/util.o \
	$(obj).target/$(TARGET)/src/torsion/src/mini-gmp.o \
	$(obj).target/$(TARGET)/src/secp256k1/src/secp256k1.o \
	$(obj).target/$(TARGET)/src/secp256k1/contrib/lax_der_parsing.o \
	$(obj).target/$(TARGET)/src/secp256k1.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))
$(OBJS): GYP_OBJCFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE)) $(CFLAGS_OBJC_$(BUILDTYPE))
$(OBJS): GYP_OBJCXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE))  $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE)) $(CFLAGS_OBJCC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.cc FORCE_DO_CMD
	@$(call do_cmd,cxx,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
LDFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Debug := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LDFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first \
	-mmacosx-version-min=10.10 \
	-arch x86_64 \
	-L$(builddir) \
	-stdlib=libc++

LIBTOOLFLAGS_Release := \
	-undefined dynamic_lookup \
	-Wl,-no_pie \
	-Wl,-search_paths_first

LIBS :=

$(builddir)/bcrypto.node: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(builddir)/bcrypto.node: LIBS := $(LIBS)
$(builddir)/bcrypto.node: GYP_LIBTOOLFLAGS := $(LIBTOOLFLAGS_$(BUILDTYPE))
$(builddir)/bcrypto.node: TOOLSET := $(TOOLSET)
$(builddir)/bcrypto.node: $(OBJS) FORCE_DO_CMD
	$(call do_cmd,solink_module)

all_deps += $(builddir)/bcrypto.node
# Add target alias
.PHONY: bcrypto
bcrypto: $(builddir)/bcrypto.node

# Short alias for building this executable.
.PHONY: bcrypto.node
bcrypto.node: $(builddir)/bcrypto.node

# Add executable to "all" target.
.PHONY: all
all: $(builddir)/bcrypto.node

